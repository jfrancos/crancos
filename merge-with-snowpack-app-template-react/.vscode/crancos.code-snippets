{
  "Add handler with event param": {
    "prefix": "h",
    "scope": "javascriptreact",
    "body": [
      "const handle$1 = (${2:{ target: { value \\} \\}}) => {",
      "  $0",
      "}"
    ],
    "description": "Add handler with event param"
  },
  "Add mapped handler with event param": {
    "prefix": "hi",
    "scope": "javascriptreact",
    "body": [
      "const handle$1 = (index) => (${2:{ target: { value \\} \\}}) => {",
      "  $0",
      "}"
    ],
    "description": "Add mapped handler with event param"
  },
  "Add a div w/ className": {
    "prefix": "d",
    "scope": "javascriptreact",
    "body": ["<div className=\"$1\">", "  $2", "</div>"],
    "description": "Add a div w/ className"
  },
  "Use state": {
    "prefix": "s",
    "scope": "javascriptreact",
    "body": [
      "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:null})"
    ],
    "description": "Use state"
  },
  "Update at index": {
    "prefix": "ui",
    "scope": "javascriptreact",
    "body": [
      "set${1/(.*)/${1:/capitalize}/}($1 => [",
      "  ...$1.slice(0, index),",
      "  { ...$1[index], $2},",
      "  ...$1.slice(index + 1),",
      "]);"
    ],
    "description": "Update at index"
  },
  "Add event listener": {
    "scope": "javascriptreact",
    "prefix": "el",
    "body": [
      "useEffect(() => {",
      "  const handle${1/(.*)/${1:/capitalize}/} = ({$3}) => {",
      "    $0",
      "  };",
      "  document.addEventListener('$1', handle${1/(.*)/${1:/capitalize}/});",
	  "  return () => document.removeEventListener('$1', handle${1/(.*)/${1:/capitalize}/});",
	  "});"
    ],
    "description": "Add event listener"
  }
}